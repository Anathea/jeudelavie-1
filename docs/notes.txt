*****************
* Jeu de la vie *
*****************

**Énoncé**

• C'est un monde de Gaulois, composés de Gaulois et Gauloises
• Ressources mobiles : ressources mobiles (lapins, ...) et immobiles (arbres, baies, ...)
• C'est un monde communiste : les Gaulois agissent en tant que tribu et pas en individu.
• Gérer des éléments : éléments mobiles et ressources (et ressources mobiles -> héritage répété)
• Pas de prédateurs (Romains)
• L'utilisateur saisis les paramètres initiaux
• Nourriture prioritaire sur le bois
• Les ressources se reproduisent aussi.
• Un affichage console suffit
• Cases hexagonales : dans chaque case, il y a soit rien, soit une case.
• Reproduction sexuée (un mâle et une femelle)
• Phases :
	1. Les Gaulois vont chercher à récupérer des ressources pour construire des abris et se nourrir.
	2. Les Gaulois

** Aide **

• Réaliser un projet modeste mais fonctionnel avant d'ajouter d'autres fonctionnalités.
• Utiliser le polymorphisme
• Méthode agir polymorphe : appliquée à sa forme dynamique
• Si un Gaulois coupe un arbre, il prend la place de l'arbre et les ressources vont à la communauté.
• Le monde est un vecteur de pointeurs d'éléments (hérite de vecteur d'élément)
• Coordonnée valide = abscisse et ordonnée ont la même parité
• Utiliser une Map : Contient des paires d'éléments : la clé et l'information utile.

• Planning prévisionnel :
	• sem. 1. Placer les éléments
	• sem. 2. Arriver à faire se déplacer les éléments mobiles
	• sem. 3. Recherche de ressources : arbres, lapins, ..
	• sem. 4. Reproduction

• Paramètres des humains :
	• Vitesse : Un humain se déplace d'une à 3 cases par tour.
	• Vision : Un humain peut voir d'une à 3 cases à coté de lui.
	• Vitalité : Points de vie.
	• Age : Années * 100
	• Espérance de vie : Donnée aléatoirement à chaque humain, lorsque l'âge=l’espérance de vie, mort.

• Constantes :
	• Espérance de vie des humains min et max
	• Taille du monde

• Classe position :
	• 2 entiers
	• On ne peut pas avoir n'importe quelle position (car cases hexagones)
	• Map : clé=position : récupérer élément avec position ou position avec élément.
	• Redéfinir l'opérateur inférieur
	• ex :
map<position, unisigned> Carte;
Monde::Monde()
{
	Position pos(1,3);
	Element * elt = new Element(pos, "Toto");
	push_back(elt); //ajoute un élément dans le vecteur
	Carte.insert(pair<Position, unsigned> (pos, size()-1));
}
• Voir méthode afficher sur Affichage.pdf
